apiVersion: v2.edp.epam.com/v1
kind: CDPipeline
metadata:
  name: mypipeline
spec:
  applications:
    - test
  applicationsToPromote:
    - test
  deploymentType: container
  inputDockerStreams:
    - test-main
  name: mypipeline

---
apiVersion: v2.edp.epam.com/v1
kind: Stage
metadata:
  name: mypipeline-dev
spec:
  cdPipeline: mypipeline
  clusterName: in-cluster
  description: Development Environment
  jobProvisioning: default
  name: dev
  namespace: edp-mypipeline-dev
  order: 0
  qualityGates:
    - autotestName: null
      branchName: null
      qualityGateType: manual
      stepName: approve
  source:
    library:
      name: default
    type: default
  triggerType: Manual

---
apiVersion: v2.edp.epam.com/v1
kind: Stage
metadata:
  name: mypipeline-qa
spec:
  cdPipeline: mypipeline
  clusterName: in-cluster
  description: QA Environment
  jobProvisioning: default
  name: qa
  # here we have custom namespace name instead of EDP pattern
  namespace: custom-namespace
  order: 1
  qualityGates:
    - autotestName: null
      branchName: null
      qualityGateType: manual
      stepName: approve
  source:
    library:
      name: default
    type: default
  triggerType: Auto

---

apiVersion: v2.edp.epam.com/v1
kind: Codebase
metadata:
  name: test
spec:
  buildTool: go
  ciTool: tekton
  defaultBranch: main
  deploymentScript: helm-chart
  description: app1
  emptyProject: false
  framework: gin
  gitServer: gerrit
  gitUrlPath: /test
  lang: go
  strategy: create
  type: application
  versioning:
    type: default

---

apiVersion: v2.edp.epam.com/v1
kind: GitServer
metadata:
  name: gerrit
spec:
  gitHost: gerrit-dev
  gitProvider: gerrit
  gitUser: git
  httpsPort: 443
  nameSshKeySecret: gerrit-ciuser-sshkey
  sshPort: 30000

---
apiVersion: v2.edp.epam.com/v1
kind: CodebaseImageStream
metadata:
  name: test-main
spec:
  codebase: test
  imageName: registry.host.local/registry-space/test
